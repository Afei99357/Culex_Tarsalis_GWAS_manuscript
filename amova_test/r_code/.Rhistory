add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("B")
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
# plot_grid(p1, p2, labels = c('A', 'B'), label_size = 24)
plot_grid(p1, p2, label_size = 24)
dev.off()
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance (m)",
ylab="Genetic Distance (1/(1-Fst))",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("B") +
theme(plot.title = element_text(hjust = 0.5))
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
# plot_grid(p1, p2, labels = c('A', 'B'), label_size = 24)
plot_grid(p1, p2, label_size = 24)
dev.off()
### Plot of correlation with density of points to visual check linearity between genetic distance and environmental distance
dens <- MASS::kde2d(Dgeo, Dgen, n=300)
myPal <- colorRampPalette(c("white","blue","gold","orange","red"))
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/Correlation_between_Geographic_and_Genetic_Distances.png", width=10, height=10, units="in", res=318)
plot(Dgeo, Dgen, pch=20, cex=0.5, xlab="Geographic Distance", ylab="Genetic Distance", main="(C)")
image(dens, col=transp(myPal(300), 0.7), add=TRUE)
abline(fit <- lm(Dgen ~ Dgeo))
lines(loess.smooth(Dgeo, Dgen), col="red")
# legend("topleft", bty="n", legend=paste(" Linear regression R2: ", format(summary(fit)$adj.r.squared, digits=4), "\n", "Loess fit R2: ", format(adjusted_r_squared, digits = 4)))
dev.off()
### Plot of correlation with density of points to visual check linearity between genetic distance and environmental distance
dens_2 <- MASS::kde2d(Denv, Dgen, n=300)
myPal <- colorRampPalette(c("white","blue","gold","orange","red"))
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/Correlation_between_Environment_and_Genetic_Distances.png", width=10, height=10, units="in", res=318)
plot(Denv, Dgen, pch=20, cex=0.5, xlab="Environmental Distance", ylab="Genetic Distance", main="(D)")
image(dens_2, col=transp(myPal(300), 0.7), add=TRUE)
abline(fit2 <- lm(Dgen ~ Denv))
lines(loess.smooth(Denv, Dgen), col="red")
# # get adjusted r2 value for the loess smooth fit
# loess_fit_2 <- loess(Dgen ~ Denv)
# predicted_values_2 <- predict(loess_fit_2)
# correlation_2 <- cor(Dgen, predicted_values_2)
# r_squared_2 <- correlation_2^2
# num_predictors_2 <- 1
# n_2 <- length(Dgen)
# adjusted_r_squared_2 <- 1 - (1 - r_squared_2) * ((n_2 - 1) / (n_2 - num_predictors_2 - 1))
#
# legend("topleft", bty="n", legend=paste(" Linear regression R2: ", format(summary(fit2)$adj.r.squared, digits=4), "\n", "Loess fit R2: ", format(adjusted_r_squared_2, digits = 4)))
dev.off()
### put these two plots in one png
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_density_kernel.png", width=20, height=10, units="in", res=318)
par(mfrow = c(1, 2))  # Set up a 1x2 grid for two plots side by side
# First plot
plot(Dgeo, Dgen, pch=20, cex=0.5, xlab="Geographic Distance", ylab="Genetic Distance")
image(dens, col=transp(myPal(300), 0.7), add=TRUE)
abline(lm(Dgen ~ Dgeo))
lines(loess.smooth(Dgeo, Dgen), col="red")
# Second plot
plot(Denv, Dgen, pch=20, cex=0.5, xlab="Environmental Distance", ylab="Genetic Distance")
image(dens_2, col=transp(myPal(300), 0.7), add=TRUE)
abline(lm(Dgen ~ Denv))
lines(loess.smooth(Denv, Dgen), col="red")
# legend("topleft", bty="n", legend=paste(" Linear regression R2 is", format(summary(fit2)$adj.r.squared, digits=4) , "\n", "Loess fit R2 is", format(adjusted_r_squared_2,  digits = 4)))
dev.off()
### put these two plots in one png
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_density_kernel.png", width=20, height=10, units="in", res=318)
par(mfrow = c(1, 2))  # Set up a 1x2 grid for two plots side by side
# First plot
plot(Dgeo, Dgen, pch=20, cex=0.5, xlab="Geographic Distance", ylab="Genetic Distance", main="(C)")
image(dens, col=transp(myPal(300), 0.7), add=TRUE)
abline(lm(Dgen ~ Dgeo))
lines(loess.smooth(Dgeo, Dgen), col="red")
# Second plot
plot(Denv, Dgen, pch=20, cex=0.5, xlab="Environmental Distance", ylab="Genetic Distance", main="(D)")
image(dens_2, col=transp(myPal(300), 0.7), add=TRUE)
abline(lm(Dgen ~ Denv))
lines(loess.smooth(Denv, Dgen), col="red")
# legend("topleft", bty="n", legend=paste(" Linear regression R2 is", format(summary(fit2)$adj.r.squared, digits=4) , "\n", "Loess fit R2 is", format(adjusted_r_squared_2,  digits = 4)))
dev.off()
### Regular correlation scatter plots with regression lines
library(ggpubr)
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance (m)",
ylab="Genetic Distance (1/(1-Fst))",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5, size = 20))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(B)") +
theme(plot.title = element_text(hjust = 0.5, size = 20))
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
# plot_grid(p1, p2, labels = c('A', 'B'), label_size = 24)
plot_grid(p1, p2, label_size = 24)
dev.off()
### put these two plots in one png
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_density_kernel.png", width=20, height=10, units="in", res=318)
par(family="Arial")
par(mfrow = c(1, 2))  # Set up a 1x2 grid for two plots side by side
# First plot
plot(Dgeo, Dgen, pch=20, cex=0.5, xlab="Geographic Distance", ylab="Genetic Distance", main="(C)", cex.main=1.6)
image(dens, col=transp(myPal(300), 0.7), add=TRUE)
abline(lm(Dgen ~ Dgeo))
lines(loess.smooth(Dgeo, Dgen), col="red")
# Second plot
plot(Denv, Dgen, pch=20, cex=0.5, xlab="Environmental Distance", ylab="Genetic Distance", main="(D)", cex.main=1.6)
image(dens_2, col=transp(myPal(300), 0.7), add=TRUE)
abline(lm(Dgen ~ Denv))
lines(loess.smooth(Denv, Dgen), col="red")
# legend("topleft", bty="n", legend=paste(" Linear regression R2 is", format(summary(fit2)$adj.r.squared, digits=4) , "\n", "Loess fit R2 is", format(adjusted_r_squared_2,  digits = 4)))
dev.off()
### put these two plots in one png
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_density_kernel.png", width=20, height=10, units="in", res=318)
par(family="Arial")
par(mfrow = c(1, 2))  # Set up a 1x2 grid for two plots side by side
# First plot
plot(Dgeo, Dgen, pch=20, cex=0.5, xlab="Geographic Distance", ylab="Genetic Distance", main="(C)", cex.main=1.6, font.main=1)
image(dens, col=transp(myPal(300), 0.7), add=TRUE)
abline(lm(Dgen ~ Dgeo))
lines(loess.smooth(Dgeo, Dgen), col="red")
# Second plot
plot(Denv, Dgen, pch=20, cex=0.5, xlab="Environmental Distance", ylab="Genetic Distance", main="(D)", cex.main=1.6, font.main=1)
image(dens_2, col=transp(myPal(300), 0.7), add=TRUE)
abline(lm(Dgen ~ Denv))
lines(loess.smooth(Denv, Dgen), col="red")
# legend("topleft", bty="n", legend=paste(" Linear regression R2 is", format(summary(fit2)$adj.r.squared, digits=4) , "\n", "Loess fit R2 is", format(adjusted_r_squared_2,  digits = 4)))
dev.off()
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance (m)",
ylab="Genetic Distance (1/(1-Fst))",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(B)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
# plot_grid(p1, p2, labels = c('A', 'B'), label_size = 24)
plot_grid(p1, p2, label_size = 24)
dev.off()
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance (m)",
ylab="Genetic Distance (1/(1-Fst))",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=0.5))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(B)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=0.5))
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
# plot_grid(p1, p2, labels = c('A', 'B'), label_size = 24)
plot_grid(p1, p2, label_size = 24)
dev.off()
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance (m)",
ylab="Genetic Distance (1/(1-Fst))",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(B)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
# plot_grid(p1, p2, labels = c('A', 'B'), label_size = 24)
plot_grid(p1, p2, label_size = 24)
dev.off()
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
par(mfrow = c(1, 2))  # Set up a 1x2 grid for two plots side by side
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance (m)",
ylab="Genetic Distance (1/(1-Fst))",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(B)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
# plot_grid(p1, p2, labels = c('A', 'B'), label_size = 24)
# plot_grid(p1, p2, label_size = 24)
dev.off()
### Regular correlation scatter plots with regression lines
library(ggpubr)
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
par(mfrow = c(1, 2))  # Set up a 1x2 grid for two plots side by side
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance",
ylab="Genetic Distance (1/(1-Fst))",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(B)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
# plot_grid(p1, p2, labels = c('A', 'B'), label_size = 24)
# plot_grid(p1, p2, label_size = 24)
dev.off()
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
par(mfrow = c(1, 2))  # Set up a 1x2 grid for two plots side by side
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance",
ylab="Genetic Distance",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="Genetic Distance",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(B)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
dev.off()
### Regular correlation scatter plots with regression lines
library(ggpubr)
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
par(mfrow = c(1, 2))  # Set up a 1x2 grid for two plots side by side
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance",
ylab="Genetic Distance",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="Genetic Distance",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(B)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
dev.off()
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
par(mfrow = c(1, 2))  # Set up a 1x2 grid for two plots side by side
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance",
ylab="Genetic Distance",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="Genetic Distance",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(B)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
dev.off()
# legend("topleft", bty="n", legend=paste(" Linear regression R2 is", format(summary(fit2)$adj.r.squared, digits=4) , "\n", "Loess fit R2 is", format(adjusted_r_squared_2,  digits = 4)))
dev.off()
### Regular correlation scatter plots with regression lines
library(ggpubr)
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
par(mfrow = c(1, 2))  # Set up a 1x2 grid for two plots side by side
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance",
ylab="Genetic Distance",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="Genetic Distance",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(B)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
dev.off()
### Note tCtarsalis_sample_w_GPS_climate_new_filtered_idhat a lot of this code (especially the model testing)
### comes from bookdown.org/hhwagner1/LandGenCourse
### Set working directory and environment variables
#setwd("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/R_code")
#options(stringsAsFactors = FALSE)
library(geosphere)
library(vegan)
library(Fragman)
library(extrafont)
library(cowplot)
library(corMLPE)
rm(list = ls())
### Read in the pairwise Fst Calculations
fst = read.csv("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/pairwise_fst_table.csv", header=TRUE)
### Read in the Latitude and Longitudes
### Fix come of the locIDs
coords = read.csv("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Ctarsalis_sample_w_GPS_climate_average_new_filtered_id_region.csv")
### Simplify the coords table to only have 1 entry per population
pop.coords = coords[!duplicated(coords[,c('locID')]),]
### Get the Lats and Long for the first pop in each comparison
m = match(fst$Pop1, pop.coords$popID)
fst$Lat1 = pop.coords$GPS.Lat[m]
fst$Lon1 = pop.coords$GPS.Lon[m]
### Now get the coordinates for the second pop in each comparison
m2 = match(fst$Pop2, pop.coords$popID)
fst$Lat2 = pop.coords$GPS.Lat[m2]
fst$Lon2 = pop.coords$GPS.Lon[m2]
### Now calculate the Geographic Distances
Dgeo = rep(0, nrow(fst))
for (i in 1:nrow(fst)) {
my.dist = distm(c(fst$Lon1[i], fst$Lat1[i]), c(fst$Lon2[i], fst$Lat2[i]), fun = distHaversine)
Dgeo[i] = my.dist
}
### Pull out the desired Fst value and transform
Dgen = as.vector(fst$PairwiseFst)
Dgen = Dgen/(1-Dgen)
### Convert the table into 2 matrices (to use in Mantel test)
temp.df = data.frame(Pop1 = fst$Pop1, Pop2=fst$Pop2, Dgen=Dgen, Dgeo=Dgeo)
nams <- with(temp.df, unique(c(as.character(Pop1), as.character(Pop2))))
mat.gen = matrix(0, ncol=length(nams), nrow=length(nams))
mat.geo = matrix(0, ncol=length(nams), nrow=length(nams))
for (i in 1:length(nams)) {
for (j in 1:length(nams)) {
## if the 2 population IDs are the same, then skip to the next ID
if (nams[i]==nams[j]) {
next
} else {
## Figure out which ID should be pop1 and which should be pop2
## Then get the row that actually has data and save in the matrices
x = which(temp.df$Pop1==nams[i] & temp.df$Pop2==nams[j])
y = which(temp.df$Pop1==nams[j] & temp.df$Pop2==nams[i])
if ((length(x)) > length(y)) {
mat.gen[i,j] = temp.df$Dgen[x]
mat.geo[i,j] = temp.df$Dgeo[x]
} else {
mat.gen[i,j] = temp.df$Dgen[y]
mat.geo[i,j] = temp.df$Dgeo[y]
}
}
}
}
### Mantel test of correlation with Physical Distance
IBD.geo <- vegan::mantel(mat.gen,mat.geo, method="spearman", permutations=9999)
IBD.geo
# get the population info
row_names <- pop.coords$popID
### adding environmental data, remove the highly correlated variables from RDA analysis r script (avg_ssr, avg_evabs, avg_e, avg_tp)
clim.table <- pop.coords[, c("avg_u10", "avg_v10", "avg_t2m", "avg_lai_hv", "avg_lai_lv", "avg_src", "avg_sro", "avg_e")]
### Next, get the Canberra distances based on the mean environmental variables
dist.env <- dist(clim.table[, -1], method = 'canberra')
IBE.env <- vegan::mantel(mat.gen,dist.env, method="spearman", permutations=9999)
IBE.env
### Get the environmental distances into a column of the dataframe with the Genetic Distance
### and Geographic distance variables
env.mat = as.matrix(dist.env)
temp.df$Denv = rep(NA, nrow(temp.df))
for (i in 1:nrow(temp.df)) {
my.row = which(nams==temp.df$Pop1[i])
my.col = which(nams==temp.df$Pop2[i])
temp.df$Denv[i] = env.mat[my.row,my.col]
}
## Denv
Denv <- temp.df$Denv
### Scale the data
temp.df$Dgenz <- scale(temp.df$Dgen, center=TRUE, scale=TRUE)
temp.df$Dgeoz <- scale(temp.df$Dgeo, center=TRUE, scale=TRUE)
temp.df$Denvz <- scale(temp.df$Denv, center=TRUE, scale=TRUE)
### Check for colinearity
CSF.df = temp.df[,6:8]
usdm::vif(CSF.df)
### Run a Mixed Model to look at Both Distance AND Environment together
mixMod <- nlme::gls(Dgenz ~ Dgeoz + Denvz,
correlation=corMLPE::corMLPE(form=~Pop1+Pop2),
data=temp.df, method="REML")
### Regular correlation scatter plots with regression lines
library(ggpubr)
png("/Users/ericliao/Desktop/WNV_project_files/landscape_genetics/Paper_results/IBD_IBE_test/r_code/IBD_IBE_Plots.png", width=20, height=10, units="in", res=300)
par(mfrow = c(1, 2))  # Set up a 1x2 grid for two plots side by side
p1 = ggscatter(temp.df, x="Dgeo",, y="Dgen", color="#0072B2",
xlab="Geographic Distance",
ylab="Genetic Distance",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(A)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
p2 = ggscatter(temp.df, x="Denv",, y="Dgen", color="#0072B2",
xlab="Environmental Distance",
ylab="Genetic Distance",
add = "reg.line",
add.params = list(color="#CC79A7", fill="lightpink"),
conf.int = TRUE,
cor.coef=FALSE,
theme(text=element_text(size=16, family="Arial"))) +
ggtitle("(B)") +
theme(plot.title = element_text(hjust = 0.5, size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
dev.off()
